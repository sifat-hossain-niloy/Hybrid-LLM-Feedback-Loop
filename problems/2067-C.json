{
    "statement": "You are given a positive integer\n𝑛\n. In one operation, you can add to\n𝑛\nany positive integer whose decimal representation contains only the digit\n9\n, possibly repeated several times.\nWhat is the minimum number of operations needed to make the number\n𝑛\ncontain at least one digit\n7\nin its decimal representation?\nFor example, if\n𝑛=80\n, it is sufficient to perform one operation: you can add\n99\nto\n𝑛\n, after the operation\n𝑛=179\n, which contains the digit\n7\n.",
    "input_specification": "Each test contains multiple test cases. The first line contains the number of test cases\n𝑡\n(\n1≤𝑡≤\n10\n4\n). The description of the test cases follows.\nThe only line of each test case contains an integer\n𝑛\n(\n10≤𝑛≤\n10\n9\n).",
    "output_specification": "For each test case, output the minimum number of operations required for the number\n𝑛\nto contain the digit\n7\n.",
    "sample_tests": [
        {
            "input": "16\n51\n60\n61\n777\n12345689\n1000000000\n2002\n3001\n977\n989898986\n80\n800001\n96\n70\n15\n90",
            "output": "3\n2\n1\n0\n1\n3\n5\n4\n0\n7\n1\n2\n7\n0\n7\n3"
        }
    ],
    "note": "In the first test case, three operations are sufficient:\n51+9+9+9=78\n, which contains the digit\n7\n. It can be shown that it is impossible to achieve the goal in one or two operations.\nIn the second test case, two operations are sufficient:\n60+9+9=78\n.\nIn the third test case, one operation is sufficient:\n61+9=70\n.\nIn the fourth test case,\n𝑛\nalready contains the digit\n7\n, so no operations are required.\nIn the fifth test case, you can add\n99\nto\n𝑛\nto obtain a number containing the digit\n7\n.",
    "tags": [
        "brute force",
        "dfs and similar",
        "greedy",
        "math"
    ],
    "rating": "1500"
}