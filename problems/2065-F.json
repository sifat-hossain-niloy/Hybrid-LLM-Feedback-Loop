{
    "statement": "Let's define the majority of a sequence of\n𝑘\nelements as the unique value that appears strictly more than\n⌊\n𝑘\n2\n⌋\n⌊\ntimes. If such a value does not exist, then the sequence does not have a majority. For example, the sequence\n[1,3,2,3,3]\nhas a majority\n3\nbecause it appears\n3>⌊\n5\n2\n⌋=2\ntimes, but\n[1,2,3,4,5]\nand\n[1,3,2,3,4]\ndo not have a majority.\nSkibidus found a tree\n∗\nof\n𝑛\nvertices and an array\n𝑎\nof length\n𝑛\n. Vertex\n𝑖\nhas the value\n𝑎\n𝑖\nwritten on it, where\n𝑎\n𝑖\nis an integer in the range\n[1,𝑛]\n.\nFor each\n𝑖\nfrom\n1\nto\n𝑛\n, please determine if there exists a non-trivial simple path\n†\nsuch that\n𝑖\nis the majority of the sequence of integers written on the vertices that form the path.\n∗\nA tree is a connected graph without cycles.\n†\nA sequence of vertices\n𝑣\n1\n,\n𝑣\n2\n,...,\n𝑣\n𝑚\n(\n𝑚≥2\n) forms a non-trivial simple path if\n𝑣\n𝑖\nand\n𝑣\n𝑖+1\nare connected by an edge for all\n1≤𝑖≤𝑚−1\nand all\n𝑣\n𝑖\nare pairwise distinct. Note that the path must consist of at least\n2\nvertices.",
    "input_specification": "Each test contains multiple test cases. The first line contains the number of test cases\n𝑡\n(\n1≤𝑡≤\n10\n4\n). The description of the test cases follows.\nThe first line of each test case contains a single integer\n𝑛\n(\n2≤𝑛≤5⋅\n10\n5\n)  — the number of vertices.\nThe second line of each test case contains\n𝑎\n1\n,\n𝑎\n2\n,…,\n𝑎\n𝑛\n(\n1≤\n𝑎\n𝑖\n≤𝑛\n)  — the integers written on the vertices.\nEach of the next\n𝑛−1\nlines contains two integers\n𝑢\n𝑖\nand\n𝑣\n𝑖\n, denoting the two vertices connected by an edge (\n1≤\n𝑢\n𝑖\n,\n𝑣\n𝑖\n≤𝑛\n,\n𝑢\n𝑖\n≠\n𝑣\n𝑖\n).\nIt is guaranteed that the given edges form a tree.\nIt is guaranteed that the sum of\n𝑛\nover all test cases does not exceed\n5⋅\n10\n5\n.",
    "output_specification": "For each test case, output a binary string\n𝑠\nof length\n𝑛\non a separate line.\n𝑠\n𝑖\nshould be computed as follows:",
    "sample_tests": [
        {
            "input": "4\n3\n1 2 3\n1 3\n2 3\n4\n3 1 1 3\n1 2\n2 3\n4 2\n4\n2 4 4 2\n1 2\n2 3\n3 4\n13\n1 4 4 7 4 7 1 1 7 11 11 11 11\n1 2\n2 3\n3 4\n4 5\n4 6\n2 7\n7 8\n2 9\n6 10\n5 11\n11 12\n10 13",
            "output": "000\n1010\n0001\n1001001000100"
        }
    ],
    "note": "In the first test case, there is no non-trivial path with\n1\n,\n2\n, or\n3\nas a majority, so the binary string outputted is \"000\".\nIn the second test case,\n1→2→4\nis a non-trivial path with\n3\nas a majority.",
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ],
    "rating": "1700"
}