{
    "statement": "You are given an array of integers\n𝑎\nof length\n𝑛\n. You can perform the following operation zero or more times:\nIn one operation choose an index\n𝑖\n(\n1≤𝑖≤𝑛\n), assign\n𝑎\n𝑖\n:=\n𝑎\n𝑖\n+1\n, and then move\n𝑎\n𝑖\nto the back of the array (to the rightmost position). For example, if\n𝑎=[3,5,1,9]\n, and you choose\n𝑖=2\n, the array becomes\n[3,1,9,6]\n.\nFind the lexicographically smallest\n∗\narray you can get by performing these operations.\n∗\nAn array\n𝑐\nis lexicographically smaller than an array\n𝑑\nif and only if one of the following holds:\n𝑐\nis a prefix of\n𝑑\n, but\n𝑐≠𝑑\n; or\nin the first position where\n𝑐\nand\n𝑑\ndiffer, the array\n𝑐\nhas a smaller element than the corresponding element in\n𝑑\n.",
    "input_specification": "Each test contains multiple test cases. The first line contains the number of test cases\n𝑡\n(\n1≤𝑡≤\n10\n4\n). The description of the test cases follows.\nThe first line contains a single integer\n𝑛\n(\n1≤𝑛≤\n10\n5\n), the length of the array.\nThe second line contains\n𝑛\nintegers\n𝑎\n1\n,\n𝑎\n2\n,…,\n𝑎\n𝑛\n(\n1≤\n𝑎\n𝑖\n≤\n10\n9\n), the elements of the array.\nIt is guaranteed that the sum of\n𝑛\nover all test cases does not exceed\n10\n5\n.",
    "output_specification": "For each test case, print the lexicographically smallest array you can get.",
    "sample_tests": [
        {
            "input": "3\n3\n2 1 3\n5\n1 2 2 1 4\n6\n1 2 3 6 5 4",
            "output": "1 3 3 \n1 1 3 3 5 \n1 2 3 4 6 7"
        }
    ],
    "note": "Not found",
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ],
    "rating": "1600"
}